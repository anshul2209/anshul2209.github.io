!function(){"use strict";const e=1612794456146,o=`cache${e}`,s=["client/client.ab0c56ec.js","client/experience.71bb7a4b.js","client/SectionHeader.42fd4550.js","client/index.b725df9b.js","client/awards.cff82752.js","client/blog.d5a05f99.js","client/skills.923d5026.js","client/contact.8399a1a1.js","client/videos.a98b274b.js","client/projects.c073b15e.js","client/client.bee79100.js"].concat(["service-worker-index.html","CNAME","activity.jpg","ai_for_everyone.png","bg.png","brushstroke.png","cards.png","chatter.png","data_science_R.jpeg","favicon.png","giggle.gif","global.css","gourmet-food.png","great-success.png","hello.gif","homelane.jpg","lazyloader.gif","logo-192.png","logo-512.png","manifest.json","medium_logo.png","olxapp.png","profile_photo.jpg","pubg.jpg","skillsLogo/JupyterLogo.png","skillsLogo/Rlogo.png","skillsLogo/SagemakerLogo.png","skillsLogo/bootstrap.jpg","skillsLogo/css3Logo.jpg","skillsLogo/gitHubLogo.png","skillsLogo/herokuLogo.png","skillsLogo/html5.png","skillsLogo/jqueryLogo.gif","skillsLogo/nodeJsLogo.png","skillsLogo/pythonLogo.jpeg","skillsLogo/reactLogo.png","skillsLogo/sass.png","skillsLogo/svelteLogo.png","skillsLogo/svelteSapper.png","skillsLogo/vuejsLogo.png","skillsLogo/webpackLogo.png","sveltesapper.jpeg","taskr.png","udacity_ml.png"]),t=new Set(s);self.addEventListener("install",(e=>{e.waitUntil(caches.open(o).then((e=>e.addAll(s))).then((()=>{self.skipWaiting()})).catch((e=>console.log("error is",e))))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const s of e)s!==o&&await caches.delete(s);self.clients.claim()})))})),self.addEventListener("fetch",(o=>{if("GET"!==o.request.method||o.request.headers.has("range"))return;const s=new URL(o.request.url);console.log("url pathname",s.pathname),s.protocol.startsWith("http")&&(s.hostname===self.location.hostname&&s.port!==self.location.port||(s.host===self.location.host&&t.has(s.pathname)?o.respondWith(caches.match(o.request)):"only-if-cached"!==o.request.cache&&o.respondWith(caches.open(`offline${e}`).then((async e=>{try{const s=await fetch(o.request);return e.put(o.request,s.clone()),s}catch(s){const t=await e.match(o.request);if(t)return t;throw s}})))))}))}();
